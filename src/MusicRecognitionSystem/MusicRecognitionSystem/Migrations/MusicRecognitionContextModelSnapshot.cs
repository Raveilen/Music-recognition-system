// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicRecognitionSystem.Data;

#nullable disable

namespace MusicRecognitionSystem.Migrations
{
    [DbContext(typeof(MusicRecognitionContext))]
    partial class MusicRecognitionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicRecognitionSystem.Model.Hash", b =>
                {
                    b.Property<Guid>("hashID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("hashValue")
                        .HasColumnType("int");

                    b.HasKey("hashID");

                    b.ToTable("Hashes");
                });

            modelBuilder.Entity("MusicRecognitionSystem.Model.Song", b =>
                {
                    b.Property<Guid>("songID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("songID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicRecognitionSystem.Model.SongHash", b =>
                {
                    b.Property<Guid>("songID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("hashID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("timestamp")
                        .HasColumnType("int");

                    b.HasKey("songID", "hashID", "timestamp");

                    b.HasIndex("hashID");

                    b.ToTable("SongHashes");
                });

            modelBuilder.Entity("MusicRecognitionSystem.Model.SongHash", b =>
                {
                    b.HasOne("MusicRecognitionSystem.Model.Hash", "hash")
                        .WithMany("songHashes")
                        .HasForeignKey("hashID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicRecognitionSystem.Model.Song", "song")
                        .WithMany("songHashes")
                        .HasForeignKey("songID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hash");

                    b.Navigation("song");
                });

            modelBuilder.Entity("MusicRecognitionSystem.Model.Hash", b =>
                {
                    b.Navigation("songHashes");
                });

            modelBuilder.Entity("MusicRecognitionSystem.Model.Song", b =>
                {
                    b.Navigation("songHashes");
                });
#pragma warning restore 612, 618
        }
    }
}
